@using Entities.Domain
@using Service.Users

@{
    ViewBag.Title = "Manage Line";
    Layout = "~/Views/Shared/_KendoUILayout.cshtml";
}
<div class="department-filter">
    <input id="department_cbx" />
    <span style="margin: 5px;">Department:</span>
</div>
<div class="form-group">
    <div id="grid"></div>
    <input type="submit" id="btnRefresh" name="btnRefresh" style="display: none" />
</div>

@section bottomjs
{
    <script src="@Url.Content("~/Scripts/kendo/2014.1.318/kendo.web.min.js")"></script>
    <script>
        $(document).ready(function () {

            var UserDS = [];

            var getUserList = function (departmentId)
            {
                $.ajax({
                    url: '@Url.Action("UsernameList","UserManager")',
                    type: 'post',
                    dataType: 'json',
                    success: function (result) {
                        UserDS = result;
                    },
                    data: { departmentId: departmentId }
                });
            }

            function ownerDisplay(data) {
                if (data.ListUsername != "")
                    return data.ListUsername.join(', ');
                else return '';
            }

            function ownerEditor(container, options) {
                $("<select multiple='multiple' required data-bind='value:" + options.field + "'/>").appendTo(container).kendoMultiSelect({
                    dataSource: UserDS,
                    suggest: true,
                });
            }

            $("#department_cbx").kendoComboBox({
                dataTextField: "Name",
                dataValueField: "Id",
                dataSource: dataSourceDepartment,
                height: 100,
                index: 1,
                change: function (e) {
                    $("#grid").data("kendoGrid").dataSource.read();
                    getUserList(combobox.value());
                }
                , dataBound: function () {
                    combobox.select(0);
                    $("#grid").data("kendoGrid").dataSource.read();
                    getUserList(combobox.value());
                }
            });

            var combobox = $("#department_cbx").data("kendoComboBox");

            function department() {
                return { departmentId: combobox.value() }
            }


            //data post to server when create
            function creationData() {
                return { departmentId: combobox.value() }
            }

            var datasource = new kendo.data.DataSource({
                type: "json",
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("List", "Line"))",
                        type: "POST",
                        dataType: "json",
                        data: department
                        //data: additionalData
                    },
                    destroy: {
                        url: "@Html.Raw(Url.Action("Delete", "Line"))",
                        type: "POST",
                        dataType: "json"
                    },
                    create: {
                        url: "@Html.Raw(Url.Action("Create", "Line"))",
                        type: "POST",
                        dataType: "json",
                        data: creationData
                        //data: serialize
                    },
                    update: {
                        url: "@Html.Raw(Url.Action("Update", "Line"))",
                        type: "POST",
                        dataType: "json",
                        data: serialize
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors",
                    model: {
                        id: "Id",
                        fields: {

                            Order: {
                                editable: true,
                                validation:
                                {
                                    required: true,
                                },
                                type: "number"
                            },
                            LineName: {
                                editable: true,
                                validation:
                                {
                                    required: true,
                                    min: 1
                                }
                            },
                            LineCode: {
                                editable: true,
                                validation:
                                {
                                    required: true,
                                }
                            },
                            ListUsername: {
                                validation:
                                {
                                    required: true,
                                }
                            },
                            Note: {
                                editable: true,
                                validation:
                                {
                                    required: true,
                                }
                            },
                            Department: {
                                editable: true,
                                validation:
                                {
                                    required: true,
                                },
                                defaultValue: { Id: "0", Name: "--  Choose Department  --" }
                            },
                            Active: {
                                editable: true,
                                type: "boolean"
                            },
                        }
                    }
                },
                requestEnd: function (e) {
                    if (e.type == "create" || e.type == "update") {
                        this.read();
                    }
                },
                error: function (e) {
                    display_kendoui_grid_error(e);
                    // Cancel the changes
                    //this.cancelChanges();
                },

                pageSize: 15,
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true
            });


            $("#grid").kendoGrid({
                dataSource: datasource,
                pageable: {
                    refresh: true,
                    pageSizes: ["5", "10", "15", "20"]
                },
                height: 'auto',
                edit: function (e) {
                    if (e.model.Id == "") {
                        //little hack here
                        //pre-select the first value of kendoui dropdownlist datasource
                        //for some reasons (maybe, bug) it always sends 0
                        //if no value has been selected (changed) in the dropdownlist
                        if (allTypeAttributes.length > 0) {
                            //e.model.TypeId = allTypeAttributes[0].Name;
                            e.model.TypeId = allTypeAttributes[0].Id;
                        }
                    }
                },
                editable: {
                    confirmation: true,
                    mode: "inline"
                },
                edit: editorFunction,
                toolbar: ["create"],
                scrollable: false,

                columns: [

                    {
                        field: "LineCode",
                        title: "LineCode",
                        width: 250,
                        template: '#:LineCode#'
                    },
                    {
                        field: "LineName",
                        title: "LineName",
                        width: 250,

                        template: "#:LineName#"
                    },
                    {
                        field: "ListUsername",
                        title: "Owner",
                        width: 250,
                        template: ownerDisplay,
                        editor: ownerEditor,
                        values: UserDS,
                    },
                    {
                        field: "Note",
                        title: "Note",
                        width: 250,
                        template: "#:Note#"
                    },
                    //{
                    //    field: "Department",
                    //    title: "Department",
                    //    width: 250,
                    //    editor: typeDropDownEditor,
                    //    template: "#=Department.Name#"
                    //},
                    {
                        field: "Order",
                        title: "Order",
                        width: 250,
                        format: "n0",
                        template: "#=Order#"
                        //template: '#:Index#'
                    },
                    {
                        field: "Active",
                        title: "Active",
                        width: 100,
                        template: '<img src="@Url.Content("~/Content/img/")active-#=Active#.gif" />'
                    },
                    {
                        command: [
                            {
                                name: "edit",
                                text: "",
                                template: "<a class='k-button k-grid-edit' href='' style='min-width:16px;'><span class='k-icon k-edit'></span></a>"
                            }
                        ],
                        width: 200
                    }
                ]
            }).on("click", ".k-grid-edit", function () {
                $(".k-grid-update").html("<span class='k-icon k-update'></span>").css("min-width", "16px").removeClass("k-button-icontext");
                $(".k-grid-cancel").html("<span class='k-icon k-cancel'></span>").css("min-width", "16px").removeClass("k-button-icontext");
            }).on("click", ".k-grid-add", function () {
                $(".k-grid-update").html("<span class='k-icon k-update'></span>").css("min-width", "16px").removeClass("k-button-icontext");
                $(".k-grid-cancel").html("<span class='k-icon k-cancel'></span>").css("min-width", "16px").removeClass("k-button-icontext");
            });

            //search
            //$('#SearchKeyword').bind("input", function (e) {
            //    if (this.value.length >= 3 || e.keyCode == 13 || e.keyCode == 8 || e.keyCode == 46 || this.value.length == 0) {
            //        var grid = $('#grid').data('kendoGrid');
            //        grid.dataSource.page(1); //new search. Set page size to 1
            //        grid.dataSource.read();

            //    }
            //    return false;
            //});


        });

        function editorFunction(e) {
            if (e.model.Id != '') {
                //if want to allow edit lineCode ---> 
                //e.container.find("input[name=LineCode]").attr("disabled", "true");
                //e.container.find("input[name=LineCode]").css("border", "none");
                //border: none;
            }
            else//event create button
            {
                //console.log(e.container.find("input[name=LineCode]").attr("readonly","readonly"));
            }
        }
        function serialize(data) {
            for (var property in data) {
                if ($.isArray(data[property])) {
                    serializeArray(property, data[property], data);
                }
            }
        }

        function serializeArray(prefix, array, result) {
            for (var i = 0; i < array.length; i++) {
                if ($.isPlainObject(array[i])) {
                    for (var property in array[i]) {
                        result[prefix + "[" + i + "]." + property] = array[i][property];
                    }
                } else {
                    result[prefix + "[" + i + "]"] = array[i];
                }
            }
        }

        var allAttributeControlTypes = [
        ];



        var dataSourceDepartment = new kendo.data.DataSource({
            transport: {
                read: {
                    dataType: "json",
                    type: "POST",
                    url: "@Html.Raw(Url.Action("GetAllDepartment", "Department"))"
                }
            }
        //,
        //    schema: {
        //        parse: function (data) {
        //            data.unshift({ Id: "0", Name: "--  Choose Department  --" });
        //            return data;
        //        }
        //    }
        });
        function typeDropDownEditor(container, options) {
            $('<input required data-text-field="Name" data-value-field="Id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    autoBind: false,
                    dataSource: dataSourceDepartment
                });
        }

        function attributeControlTypeDropDownEditor(container, options) {
            $('<input required data-text-field="Name" data-value-field="Id" data-bind="value:AttributeControlTypeId"/>')
                .appendTo(container)
                .kendoDropDownList({
                    autoBind: false,
                    dataSource: allAttributeControlTypes
                });
        }
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#btnRefresh').click(function () {
                //refresh grid
                var grid = $("#grid").data('kendoGrid');
                grid.dataSource.read();
                //return false to don't reload a page
                return false;
            });

            $('#addLineBtn').click(function () {
                //add line grid
                var grid = $("#grid").data('kendoGrid');
                grid.dataSource.insert();
                //return false to don't reload a page
                return false;
            });


        });

    </script>
    <script>
        $(document).ready(function () {
            $("#nav-dashboard").addClass("active");
            $(".dashboard-line").addClass("active");

        });
    </script>
}